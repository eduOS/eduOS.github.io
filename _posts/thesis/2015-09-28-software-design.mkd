---
layout: post
title: add title here
tags: post, github
---

1. dictionary
  * glean words while reading 
  <leader>v
  * do practice to build sentences using the new obtained vocabulary
  * provide details for the world produced by Wordnet
  <leader>d
  * review words in the context: excerpts and the whole passage in a new window, passages are pushed to Gitst
  <leader>p
  * search words according to tags and words in excerpts and sentences
  :Glookup anything

2. comment
  * users can comment on every line by openning a preview window on the bottom
  <leader>c
  the location will be marked, revoke the comment when the cursor is in the sentence

3. spell and grammar check and style

4. programmable/hack/geek writing
  * search for particular articles according to the description or tag
  * skeleton for each step of process writing: [thesis creator](johnmcgarvey.com/apworld/student/thesiscreator.html)

    At the beginning the buffer shows the step introduction and it will vanish when the writer presses i to go to the insert mode and a preview window appear for telling writers the current, the previous and the next step. You tell the system you've finished the step by pressing 'n' in the normal mode, going to the next step. At the same time this system automatically generates a commit, with the step name as the commit comment. If the writer need to revise the previous steps or jot down some hints for the subsequent steps then .. To be short, I'm searching for a intersection of Git and process approach of writing. The final version of the system can smartly assist the writing beginner write following the writing rules.
  press n to 
this is the main and core part
wiki combined git
    gollum

5. process approach to EFL writing pedagogy and software development based on distributed version control
  0. two ways of marking steps: branching and tagging
    * the tagging way is wrong
The theory foundation: process approach to writing
  1. branching and writing
    * when having finished a step pressing a short cut, <C-N> for example, can bring the writer to the next step on the next branch. 
    * Given that for each step there exist several sub-steps, we can mark them as small commits and tags. We tag sub-steps in the form of 
    * when we change previous writings in a branch automatically it branch out with all commits related to that essay.
    * some times you should redesign a certain paragraph but you have only the final version of the article, how do you make it to repeat the process of the whole article? You know change in the final version is not a wise idea. 
    * commits for a file is continuous in a branch, otherwise make it continuous.  
    * according to the location in the branch skipt to previous or subsequent location between the particular file and branches
    * every commit breeds a branch respecting a step

where can I gitify in the process of writing?
specify what should be done in each step
peer review
encourage revision



...........................     
Welcome proofreading help and language suggestions. Tons of thanks in advance.

